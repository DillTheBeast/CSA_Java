Answer 1:
B because != will be true since you are comparing 2 Strings

Answer 2:
A because the second if statement will also be true, changing the value

Answer 3:
public class Combinatorics {

    public static int factorial(int n) {
        if (n == 1) {
            return 1; // Base case: factorial of 1 is 1
        } else {
            return n * factorial(n - 1); // Recursive case: n * (n-1)!
        }
    }

    public static void numCombinations(int n, int r) {
        if (r > n) {
            System.out.println("There are 0 ways of choosing " + r + " items from " + n + " choices.");
        } else {
            int combinations = factorial(n) / (factorial(r) * factorial(n - r));
            System.out.println("There are " + combinations + " ways of choosing " + r + " items from " + n + " choices.");
        }
    }

    public static void main(String[] args) {
        numCombinations(2, 4); // Output: There are 0 ways of choosing 4 items from 2 choices.
        numCombinations(5, 3); // Output: There are 10 ways of choosing 3 items from 5 choices.
    }
}

Answer 4:
B

Answer 5:
C

Answer 6:
B

Answer 7:
Any number % 2 = 0
Number 1 works
Number 2 works because NONE will never print
Number 3 would work if it was !test not test
D

Answer 8:
C

Answer 9:
E

Answer 10:
dog = a is less than b OR c does not equal d
D

Answer 11:
b1 = true and false = false
b

Answer 12:
x = 3
y = -1
1 is greater than -1
3 + 1 = 4
x = 4
2 is not greater than or equal to 4
y = -1
D

Answer 13: